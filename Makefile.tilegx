#
# \file Makefile.tilegx
#
# This is used to run Suricata either in simulation:
# 
# make -f Makefile.tilegx run_sim
#
# or on a Tilera "Wildcat" board:
#
# make -f Makefile.tilegx run_wc
#
# \author Tom DeCanio <decanio.tom@gmail.com
#

# Default target.
all:

ifndef TILERA_ROOT
$(error The 'TILERA_ROOT' environment variable is not set.)
endif

#
# Local environment configuation.
# Go ahead and modify these:
BASE_DIR=/mnt/decanio
THREADMETER_DIR=$(BASE_DIR)/work/TileGX
YAML_DIR=$(BASE_DIR)/work/TileGX/yamlgx-0.1.3
PCAPFILE=$(BASE_DIR)/work/napatech/suricata1.pcap

CC = $(TILERA_ROOT)/bin/tile-gcc
OPT = -Os
CFLAGS = -std=gnu99 -Wall -Werror -g $(OPT)

OPT = -Os
CFLAGS = -std=gnu99 -Wall -Werror -g $(OPT)
LIBS = -lgxio -ltmc -lpthread -static

app.o: app.c
	LANG=C $(CC) $(CFLAGS) -c -o $@ $<

app: app.o
	LANG=C $(CC) $(LDFLAGS) -o $@ $< $(LIBS)

all: app

clean:
	rm -f *.o app


.PHONY: all clean


TILE_MONITOR = $(TILERA_ROOT)/bin/tile-monitor

# The --hvx switch allows us to add to the linux boot parameters.  In
# this case, we change the boot configuration to have tiles 1-55 run
# in 'dataplane' mode.  (In the current release, tile 0 has some overhead
# that makes it a poor choice for dataplane.)
BOOT_ARGS = --hvd "ARGS=" \
            --hvx "TLR_INTERACTIVE=n" \
            --hvx "TLR_TELNETD=n" \
            --hvx "TLR_SSHD=n" \
            --hvx "TLR_HUGEPAGES=y" \
            --hvx "dataplane=1-35"

#CONFIG = 4x4
CONFIG = gx36

IMAGE_FILE = $(CONFIG)-dataplane.image

$(IMAGE_FILE):
	@echo Building dataplane image file: this will take about ten minutes.
	$(TILE_MONITOR) --simulator --config $(CONFIG) --functional --console \
	  --create-image $@.tmp $(BOOT_ARGS)
	mv $@.tmp $@

#  --upload ./libhtp/htp/.libs/libhtp-0.2.so.1 /lib/libhtp-0.2.so.1 \
#  --upload ./libhtp/htp/.libs/libhtp.so /lib/libhtp.so \

#  --upload ../pcre-8.12/.libs/libpcre.so.0.0.1 /lib/libpcre.so.0.0.1 \
#  --upload ../pcre-8.12/.libs/libpcre.so.0 /lib/libpcre.so.0 \
#  --upload ../pcre-8.12/.libs/libpcre.so /lib/libpcre.so \

#--upload $(TILERA_ROOT)/tile/lib/libgxio.so.1 /lib/libgxio.so.1 \

TILE_MONITOR_ARGS = \
  --hvx "dataplane=1-35" \
  --huge-pages 100 \
  --mkdir /opt/test --cd /opt/test \
  --mount-tile /usr/lib \
  --mount-tile /lib \
  --mount $(THREADMETER_DIR)/threatmeter /opt \
  --upload ./libhtp/htp/.libs/libhtp-0.2.so.1.0.2 /lib/libhtp-0.2.so.1.0.2 \
  --upload ./libhtp/htp/.libs/libhtp-0.2.so.1 /lib/libhtp-0.2.so.1 \
  --upload ./libhtp/htp/.libs/libhtp.so /lib/libhtp.so \
  --upload $(YAML_DIR)/src/.libs/libyaml-0.so.2.0.1 /lib/libyaml-0.so.2.0.1 \
  --upload $(YAML_DIR)/src/.libs/libyaml-0.so.2 /lib/libyaml-0.so.2 \
  --upload $(YAML_DIR)/src/.libs/libyaml.so /lib/libyaml.so \
  --upload ./src/.libs/suricata suricata \
  --run -+- cat /proc/tile/hvconfig -+- \
  --run -+- cat /proc/meminfo -+- \
  --run -+- mkdir -p /var/log/suricata -+- \
  --run -+- suricata -c /opt/threatmeter/etc/suricata.yaml -I xgbe0 -+-

TILE_MONITOR_UT_ARGS = \
  --huge-pages 100 \
  --mkdir /opt/test --cd /opt/test \
  --mount-tile /usr/lib \
  --mount-tile /lib \
  --mount $(THREADMETER_DIR)/threatmeter /opt \
  --upload ./libhtp/htp/.libs/libhtp-0.2.so.1.0.2 /lib/libhtp-0.2.so.1.0.2 \
  --upload ./libhtp/htp/.libs/libhtp-0.2.so.1 /lib/libhtp-0.2.so.1 \
  --upload ./libhtp/htp/.libs/libhtp.so /lib/libhtp.so \
  --upload $(YAML_DIR)/src/.libs/libyaml-0.so.2.0.1 /lib/libyaml-0.so.2.0.1 \
  --upload $(YAML_DIR)/src/.libs/libyaml-0.so.2 /lib/libyaml-0.so.2 \
  --upload $(YAML_DIR)/src/.libs/libyaml.so /lib/libyaml.so \
  --upload ./src/.libs/suricata suricata \
  --run -+- mkdir -p /var/log/suricata -+- \
  --run -+- suricata -u -+-

WILDCAT_SPEED = --hvd MEM_SPEED=750 --hvd CPU_SPEED=750

TILE_MONITOR_WILDCAT_ARGS = \
  --hvx "dataplane=1-35" \
  $(WILDCAT_SPEED) \
  --huge-pages 100 \
  --mount $(THREADMETER_DIR)/threatmeter /opt \
  --upload $(TILERA_ROOT)/tile/lib/libcap-ng.so.0.0.0 /lib/libcap-ng.so.0 \
  --upload $(TILERA_ROOT)/tile/lib/libpcre.so.0.0.1 /lib/libpcre.so.0 \
  --upload $(TILERA_ROOT)/tile/lib/libz.so.1.2.3 /lib/libz.so.1 \
  --upload $(TILERA_ROOT)/tile/lib/libnl.so.1.1 /lib/libnl.so.1 \
  --upload $(TILERA_ROOT)/tile/usr/lib/libpcap.so.1.0.0 /usr/lib/libpcap.so.1 \
  --upload ./libhtp/htp/.libs/libhtp-0.2.so.1.0.2 /lib/libhtp-0.2.so.1.0.2 \
  --upload ./libhtp/htp/.libs/libhtp-0.2.so.1 /lib/libhtp-0.2.so.1 \
  --upload ./libhtp/htp/.libs/libhtp.so /lib/libhtp.so \
  --upload $(YAML_DIR)/src/.libs/libyaml-0.so.2.0.1 /lib/libyaml-0.so.2.0.1 \
  --upload $(YAML_DIR)/src/.libs/libyaml-0.so.2 /lib/libyaml-0.so.2 \
  --upload $(YAML_DIR)/src/.libs/libyaml.so /lib/libyaml.so \
  --upload ./src/.libs/suricata suricata \
  --run -+- mkdir -p /var/log/suricata -+- \
  --run -+- suricata -c /opt/threatmeter/etc/suricata.yaml -I xgbe3 -+-

TILE_MONITOR_WILDCAT_PROFILE_ARGS = \
  --hvx "dataplane=1-35" \
  $(WILDCAT_SPEED) \
  --huge-pages 100 \
  --mount $(THREADMETER_DIR)/threatmeter /opt \
  --upload $(TILERA_ROOT)/tile/lib/libcap-ng.so.0.0.0 /lib/libcap-ng.so.0 \
  --upload $(TILERA_ROOT)/tile/lib/libpcre.so.0.0.1 /lib/libpcre.so.0 \
  --upload $(TILERA_ROOT)/tile/lib/libz.so.1.2.3 /lib/libz.so.1 \
  --upload $(TILERA_ROOT)/tile/lib/libnl.so.1.1 /lib/libnl.so.1 \
  --upload $(TILERA_ROOT)/tile/usr/lib/libpcap.so.1.0.0 /usr/lib/libpcap.so.1 \
  --upload ./libhtp/htp/.libs/libhtp-0.2.so.1.0.2 /lib/libhtp-0.2.so.1.0.2 \
  --upload ./libhtp/htp/.libs/libhtp-0.2.so.1 /lib/libhtp-0.2.so.1 \
  --upload ./libhtp/htp/.libs/libhtp.so /lib/libhtp.so \
  --upload $(YAML_DIR)/src/.libs/libyaml-0.so.2.0.1 /lib/libyaml-0.so.2.0.1 \
  --upload $(YAML_DIR)/src/.libs/libyaml-0.so.2 /lib/libyaml-0.so.2 \
  --upload $(YAML_DIR)/src/.libs/libyaml.so /lib/libyaml.so \
  --upload ./src/.libs/suricata suricata \
  --run -+- mkdir -p /var/log/suricata -+- \
  --launch -+- suricata -c /opt/threatmeter/etc/suricata.yaml -I xgbe3 -+- \
  --run -+- sleep 210 -+- \
  --profile-init --profile-kernel \
  --profile-reset \
  --profile-events '--event=ONE:10000000 --event=INSTRUCTION_BUNDLE:10000000 --event=LOAD_STALL:10000000 --event=INSTRUCTION_STALL:10000000' \
  --profile-start \
  --run -+- sleep 300 -+- \
  --profile-stop \
  --profile-dump \
  --profile-capture samples \
  --profile-analyze samples \
  --profile-shutdown \
  --quit

#SIZE = 4x4
#SIZE = gx36
FUNCTIONAL=--functional
PROFILE=--sim-args -+- --xml-profile profile.xml --profile-disable-at-startup -+-

ARGS := mpipe0:mac=0:input=$(PCAPFILE):output=output.pcap:bps=10G:stall
##--ARGS := $(ARGS):trace_mask=0xffff

SIM_ARGS := --sim-args -+- --extra-shim-args "$(ARGS)" -+-

SIM_DEPS := input.pcap

run_sim: $(SIM_DEPS) $(IMAGE_FILE)
	$(TILE_MONITOR) --image-file $(IMAGE_FILE) \
     $(FUNCTIONAL) \
     $(PROFILE) \
     --debug-on-crash \
	 $(SIM_ARGS) $(TILE_MONITOR_ARGS)

run_ut_sim: $(SIM_DEPS) $(IMAGE_FILE)
	$(TILE_MONITOR) --image-file $(IMAGE_FILE) \
     --functional \
     --debug-on-crash \
	 $(SIM_ARGS) $(TILE_MONITOR_UT_ARGS)

#WILDCAT_ARGS=--resume --dev fae-wc-1
WILDCAT_ARGS=--dev fae-wc-1

run_wc: $(SIM_DEPS) $(IMAGE_FILE)
	$(TILE_MONITOR) \
        $(WILDCAT_ARGS) \
     --debug-on-crash \
	$(TILE_MONITOR_WILDCAT_ARGS)

prof_wc: $(SIM_DEPS) $(IMAGE_FILE)
	$(TILE_MONITOR) \
        $(WILDCAT_ARGS) \
     --debug-on-crash \
	$(TILE_MONITOR_WILDCAT_PROFILE_ARGS)

.PHONY: run_sim
